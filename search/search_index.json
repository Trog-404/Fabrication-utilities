{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"Welcome to the Fabrication-utilities documentation \u00b6 Plugin for fabrication processes Introduction \u00b6 In the following the sections of the documentation to the plugin are shortly describeed and the links to the corresponding sections are provided. How-to guides \u00b6 How-to guides provide step-by-step instructions for a wide range of tasks, with the overarching topics: Install this plugin Contribute to this plugin Contribute to the documentation Explanation \u00b6 The explanation section provides background knowledge on this plugin. Reference \u00b6 The reference section includes all CLI commands and arguments, all configuration options, the possible schema annotations and their arguments, and a glossary of used terms.","title":"Home"},{"location":"index.html#welcome-to-the-fabrication-utilities-documentation","text":"Plugin for fabrication processes","title":"Welcome to the Fabrication-utilities documentation"},{"location":"index.html#introduction","text":"In the following the sections of the documentation to the plugin are shortly describeed and the links to the corresponding sections are provided.","title":"Introduction"},{"location":"index.html#how-to-guides","text":"How-to guides provide step-by-step instructions for a wide range of tasks, with the overarching topics: Install this plugin Contribute to this plugin Contribute to the documentation","title":"How-to guides"},{"location":"index.html#explanation","text":"The explanation section provides background knowledge on this plugin.","title":"Explanation"},{"location":"index.html#reference","text":"The reference section includes all CLI commands and arguments, all configuration options, the possible schema annotations and their arguments, and a glossary of used terms.","title":"Reference"},{"location":"explanation/explanation.html","text":"Explanation \u00b6 Attention TODO","title":"Explanation"},{"location":"explanation/explanation.html#explanation","text":"Attention TODO","title":"Explanation"},{"location":"how_to/contribute_to_the_documentation.html","text":"Contribute to the documentation \u00b6 To contribute to the documentation the readme in the different moduled of the plugin at the src/fabrication_utilities level and the comments in the relative __init__.py files should be updated. Pull request without well documented modifications will not be accepted.","title":"Contribute to the documentation"},{"location":"how_to/contribute_to_the_documentation.html#contribute-to-the-documentation","text":"To contribute to the documentation the readme in the different moduled of the plugin at the src/fabrication_utilities level and the comments in the relative __init__.py files should be updated. Pull request without well documented modifications will not be accepted.","title":"Contribute to the documentation"},{"location":"how_to/contribute_to_this_plugin.html","text":"Contribute to This Plugin \u00b6 To contribute to the plugin the ideal workflow should be: Fork the repository from Fabrication-Utilities in your own github repo. Performing some modifications in the forked repository. After some testing the working new code can be inserted in a pull request and then sent to the the main repository. To ensure minimum conflicts with the main repository where some modification can occur, it is mandatory to mantaine as up-to-date as possible the forked repository to the origin of the project. Contribution should be linked mainly to Schema packages definitions Apps to indicize schemas defined Example upload Schema_packages contribution \u00b6 In the schema_package module you will find different files and repo. For a better description of the module it is possible to refer to this instructions . Files at the top level in the schema_packages folder hierarchy should not be modified. They are the core of the plugin and there a lot of base definition used throghout the code are placed. Steps definitions \u00b6 It is possible to define new schemas for steps definitions in the steps branch. Here, following the taxonomy described in the explanation guide. Moreover for a general guide on how to define a new schema you can see here . Example \u00b6 If a schema is needed to describe a new kind of CVD not already present in the plugin, that schema should be inserted in the CVD . New fabrication main categories should be added the idea is to define it at the correspinding level of the others following the taxonomy and at that level define the python files containing the schemas. At that point the entry point should be defined in the __init__.py of the new module and so called in the pyproject.toml file of the entire project. If new sections are needed to define the schemas that subsections type could be defined in the utils.py file. Equipments definitions \u00b6 If a new kind of equipment is needed it could be added in the equipments module. If the equipment is used to properly perform fabrication steps is should be added in fabrication-equipments file, while characterization equipments are collected in characterization-equipments . As before new definitions for subsections could be added in the utils file of this directrory. Calculus sheet definitions \u00b6 If new calculation sheets is needed they could be defined in the calculus module of the plugin. Apps contribution \u00b6 For more detail about the structure of the apps module it is possible to read the following description . There are present two submodules both very similar. Each modulus has a directories.py file where the path to the schemas to point are report. Than you have different app for steps and equipments. Where new filters to the app should be added. The organization of the app categories and placement should not be modified. App for new step schema \u00b6 If a new schema was defined by the user, it should be searchable within NOMAD for a better findability of the entry. At this scope the work should be organized as in the following example. To define an app could be used the official NOMAD guide how to write and app . Example \u00b6 If a new step synthesis step is defined a new menu should be defined in the app for add step . The menu should be defined in the menu_steps.py file and the link to the schema defined added to the directories.py file. Example upload \u00b6","title":"Contribute to this plugin"},{"location":"how_to/contribute_to_this_plugin.html#contribute-to-this-plugin","text":"To contribute to the plugin the ideal workflow should be: Fork the repository from Fabrication-Utilities in your own github repo. Performing some modifications in the forked repository. After some testing the working new code can be inserted in a pull request and then sent to the the main repository. To ensure minimum conflicts with the main repository where some modification can occur, it is mandatory to mantaine as up-to-date as possible the forked repository to the origin of the project. Contribution should be linked mainly to Schema packages definitions Apps to indicize schemas defined Example upload","title":"Contribute to This Plugin"},{"location":"how_to/contribute_to_this_plugin.html#schema_packages-contribution","text":"In the schema_package module you will find different files and repo. For a better description of the module it is possible to refer to this instructions . Files at the top level in the schema_packages folder hierarchy should not be modified. They are the core of the plugin and there a lot of base definition used throghout the code are placed.","title":"Schema_packages contribution"},{"location":"how_to/contribute_to_this_plugin.html#steps-definitions","text":"It is possible to define new schemas for steps definitions in the steps branch. Here, following the taxonomy described in the explanation guide. Moreover for a general guide on how to define a new schema you can see here .","title":"Steps definitions"},{"location":"how_to/contribute_to_this_plugin.html#example","text":"If a schema is needed to describe a new kind of CVD not already present in the plugin, that schema should be inserted in the CVD . New fabrication main categories should be added the idea is to define it at the correspinding level of the others following the taxonomy and at that level define the python files containing the schemas. At that point the entry point should be defined in the __init__.py of the new module and so called in the pyproject.toml file of the entire project. If new sections are needed to define the schemas that subsections type could be defined in the utils.py file.","title":"Example"},{"location":"how_to/contribute_to_this_plugin.html#equipments-definitions","text":"If a new kind of equipment is needed it could be added in the equipments module. If the equipment is used to properly perform fabrication steps is should be added in fabrication-equipments file, while characterization equipments are collected in characterization-equipments . As before new definitions for subsections could be added in the utils file of this directrory.","title":"Equipments definitions"},{"location":"how_to/contribute_to_this_plugin.html#calculus-sheet-definitions","text":"If new calculation sheets is needed they could be defined in the calculus module of the plugin.","title":"Calculus sheet definitions"},{"location":"how_to/contribute_to_this_plugin.html#apps-contribution","text":"For more detail about the structure of the apps module it is possible to read the following description . There are present two submodules both very similar. Each modulus has a directories.py file where the path to the schemas to point are report. Than you have different app for steps and equipments. Where new filters to the app should be added. The organization of the app categories and placement should not be modified.","title":"Apps contribution"},{"location":"how_to/contribute_to_this_plugin.html#app-for-new-step-schema","text":"If a new schema was defined by the user, it should be searchable within NOMAD for a better findability of the entry. At this scope the work should be organized as in the following example. To define an app could be used the official NOMAD guide how to write and app .","title":"App for new step schema"},{"location":"how_to/contribute_to_this_plugin.html#example_1","text":"If a new step synthesis step is defined a new menu should be defined in the app for add step . The menu should be defined in the menu_steps.py file and the link to the schema defined added to the directories.py file.","title":"Example"},{"location":"how_to/contribute_to_this_plugin.html#example-upload","text":"","title":"Example upload"},{"location":"how_to/install_this_plugin.html","text":"Install This Plugin \u00b6 Local instance installation \u00b6 To install this package as submodule in a local instance of NOMAD (for developers, link at nomad-distro-dev ) the following steps should be followed. Fork the repository from Fabrication-Utilities in your own github repo. Add the package as a submodule as already specified in nomad-distro-dev . If desired it is possible to install directly a version of the nomad-distro-dev at disposal at the folowing link . It contains the package already installed and only the initial activation is needed and described at README . OASIS installation \u00b6 To install this package in an NOMAD OASIS distribution (link at nomad-oasis ). To add the plugin to this installation it is sufficient to follow the instructions at the add a plugin section.","title":"Install this Plugin"},{"location":"how_to/install_this_plugin.html#install-this-plugin","text":"","title":"Install This Plugin"},{"location":"how_to/install_this_plugin.html#local-instance-installation","text":"To install this package as submodule in a local instance of NOMAD (for developers, link at nomad-distro-dev ) the following steps should be followed. Fork the repository from Fabrication-Utilities in your own github repo. Add the package as a submodule as already specified in nomad-distro-dev . If desired it is possible to install directly a version of the nomad-distro-dev at disposal at the folowing link . It contains the package already installed and only the initial activation is needed and described at README .","title":"Local instance installation"},{"location":"how_to/install_this_plugin.html#oasis-installation","text":"To install this package in an NOMAD OASIS distribution (link at nomad-oasis ). To add the plugin to this installation it is sufficient to follow the instructions at the add a plugin section.","title":"OASIS installation"},{"location":"reference/references.html","text":"References \u00b6 In this section all the references used in the plugin production are presented: the denomination and the taxonomic orgnaization of the directories, the definition of the schema structures, etc. Minimal proper NOMAD terms to know \u00b6 Taxonomy adopted \u00b6","title":"Reference"},{"location":"reference/references.html#references","text":"In this section all the references used in the plugin production are presented: the denomination and the taxonomic orgnaization of the directories, the definition of the schema structures, etc.","title":"References"},{"location":"reference/references.html#minimal-proper-nomad-terms-to-know","text":"","title":"Minimal proper NOMAD terms to know"},{"location":"reference/references.html#taxonomy-adopted","text":"","title":"Taxonomy adopted"}]}